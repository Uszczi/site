{"version":3,"sources":["components/Footer.js","components/Header.js","projects/dino/scripts/objects/Barrier.js","projects/dino/scripts/objects/Bush.js","projects/dino/scripts/objects/Bird.js","projects/dino/scripts/objects/Obstacles.js","projects/dino/scripts/objects/Dino.js","projects/dino/scripts/sketch.js","projects/dino/scripts/objects/Sky.js","projects/dino/scripts/objects/Enviroment.js","projects/dino/App.js","projects/p5demo/sketch.js","projects/p5demo/App.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Header","Barrier","x","bottom_y","width","height","p","this","config","BASIC_WIDTH","BASIC_HEIGHT","score","fill","rect","GAME_SPEED","Dino","position_Y","Bush","Bird","Obstacles","obstacles","maxDistance","minStartDistance","minDistance","speed","bestScore","birdcounter","min","max","Math","ceil","floor","random","i","push","GAME_WIDTH","getRandomPosition","Dinos","length","update","show","behindScene","splice","addScore","addNewObstacle","colision","console","log","brain","position_X","GAME_HEIGHT","gravity","velocity","lift","isOnGround","draw","keyCode","jump","duck","Player","enviroment","Cloud","y","noStroke","stroke","Sky","clouds","Enviroment","sky","background","line","run","sketch","preload","setup","createCanvas","startGame","keyPressed","doAction","keyReleased","stopDucking","App","canvas","ellipse","myCustomRedrawAccordingToNewPropsHandler","newProps","color","Component","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21c6f4bc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <div className=\"Footer\">Footer tmp </div>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return <div className=\"Header\">Heddader</div>;\r\n}\r\n\r\nexport default Header;\r\n","import config from \"../configuration.json\";\r\nclass Barrier {\r\n  constructor(x, bottom_y, width, height, p) {\r\n    this.x = x;\r\n    this.bottom_y = bottom_y;\r\n    this.width = width * config.BASIC_WIDTH;\r\n    this.height = height * config.BASIC_HEIGHT;\r\n    this.p = p;\r\n\r\n    this.score = 0;\r\n  }\r\n\r\n  show() {\r\n    this.p.fill(0);\r\n    this.p.rect(this.x, this.bottom_y, this.width, -this.height);\r\n  }\r\n\r\n  update() {\r\n    this.x -= config.GAME_SPEED;\r\n  }\r\n\r\n  colision(Dino) {\r\n    // console.log(\"CHECK\");\r\n    if (\r\n      Dino.position_Y >= this.bottom_y - this.height &&\r\n      ((this.x >= 100 && this.x <= 120) ||\r\n        (this.x + this.width <= 120 && this.x + this.width > 100))\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  behindScene() {\r\n    return this.x < -50;\r\n  }\r\n\r\n  addScore() {\r\n    this.score += 1;\r\n  }\r\n  checkColison() {}\r\n}\r\n\r\nexport { Barrier };\r\n","import { Barrier } from \"./Barrier\";\r\n\r\nclass Bush extends Barrier {\r\n  constructor(x, bottom_y, width, height, p) {\r\n    super(x, bottom_y, width, height, p);\r\n  }\r\n  colision(Dino) {\r\n    // console.log(\"CHECK\");\r\n    if (\r\n      Dino.position_Y >= this.bottom_y - this.height &&\r\n      ((this.x >= 100 && this.x <= 120) ||\r\n        (this.x + this.width <= 120 && this.x + this.width > 100))\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { Bush };\r\n","import { Barrier } from \"./Barrier\";\r\n\r\nclass Bird extends Barrier {\r\n  constructor(x, bottom_y, width, height, p) {\r\n    super(x, bottom_y, width, height, p);\r\n  }\r\n  colision(Dino) {\r\n    if (\r\n      Dino.position_Y - Dino.height < this.bottom_y &&\r\n      Dino.position_Y > this.bottom_y - this.height &&\r\n      ((this.x > 100 && this.x < 120) ||\r\n        (this.x + this.width > 100 && this.x + this.width < 120))\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { Bird };\r\n","import config from \"../configuration.json\";\r\nimport { Bush } from \"./Bush\";\r\nimport { Bird } from \"./Bird\";\r\n\r\nclass Obstacles {\r\n  constructor(p) {\r\n    this.p = p;\r\n    this.obstacles = [];\r\n\r\n    this.maxDistance = 370;\r\n    this.minStartDistance = 270;\r\n    this.minDistance = 200;\r\n    this.speed = config.GAME_SPEED;\r\n\r\n    this.bestScore = 0;\r\n    this.birdcounter = 5;\r\n  }\r\n  getRandomPosition(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  startGame() {\r\n    for (let i = 0; i < 7; i++)\r\n      this.obstacles.push(\r\n        new Bush(\r\n          config.GAME_WIDTH +\r\n            this.getRandomPosition(this.minStartDistance, this.maxDistance) +\r\n            i * 350,\r\n          300,\r\n          3,\r\n          3,\r\n          this.p\r\n        )\r\n      );\r\n    // this.obstacles.push(new Bush(100, 100, 100, 100, this.p));\r\n  }\r\n  addNewObstacle(x) {\r\n    if (x) {\r\n      this.birdcounter--;\r\n      if (this.birdcounter === 0) {\r\n        this.obstacles.push(\r\n          new Bird(\r\n            x + this.getRandomPosition(this.minStartDistance, this.maxDistance),\r\n            270,\r\n            3,\r\n            5,\r\n            this.p\r\n          )\r\n        );\r\n        this.birdcounter = Math.floor(Math.random() * 4 + 3);\r\n      } else {\r\n        this.obstacles.push(\r\n          new Bush(\r\n            x + this.getRandomPosition(this.minStartDistance, this.maxDistance),\r\n            300,\r\n            3,\r\n            3,\r\n            this.p\r\n          )\r\n        );\r\n      }\r\n    } else {\r\n      this.obstacles.push(\r\n        new Bush(\r\n          config.GAME_WIDTH +\r\n            this.getRandomPosition(this.minStartDistance, this.maxDistance),\r\n          300,\r\n          3,\r\n          3,\r\n          this.p\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  update(Dinos) {\r\n    for (let i = this.obstacles.length - 1; i >= 0; i--) {\r\n      this.obstacles[i].update();\r\n      this.obstacles[i].show();\r\n\r\n      if (this.obstacles[i].behindScene()) {\r\n        this.obstacles.splice(i, 1);\r\n      }\r\n      this.obstacles[i].addScore();\r\n      if (this.obstacles.length < 7) {\r\n        this.addNewObstacle(this.obstacles[this.obstacles.length - 1].x);\r\n      }\r\n      if (this.obstacles[i].colision(Dinos)) {\r\n        console.log(\"HIT\");\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n}\r\nexport { Obstacles };\r\n","import config from \"../configuration.json\";\r\n\r\nclass Dino {\r\n  constructor(brain, p) {\r\n    this.p = p;\r\n    this.position_X = 100;\r\n    this.position_Y = -(100 - config.GAME_HEIGHT);\r\n    this.height = 50;\r\n\r\n    this.gravity = 0.6;\r\n    this.velocity = 0;\r\n    this.lift = -12;\r\n    if (brain === \"PLAYER\") {\r\n    } else if (brain) {\r\n    } else {\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    this.p.fill(0);\r\n    this.p.rect(this.position_X, this.position_Y, 20, -this.height);\r\n  }\r\n\r\n  jump() {\r\n    if (this.isOnGround()) {\r\n      this.velocity = this.lift;\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.velocity += this.gravity;\r\n\r\n    if (this.position_Y + this.velocity > -(100 - config.GAME_HEIGHT)) {\r\n      this.position_Y = -(100 - config.GAME_HEIGHT);\r\n      this.velocity = 0;\r\n    } else {\r\n      this.position_Y += this.velocity;\r\n    }\r\n\r\n    this.draw();\r\n  }\r\n\r\n  isOnGround() {\r\n    if (this.position_Y === -(100 - config.GAME_HEIGHT)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  duck() {\r\n    if (this.isOnGround()) {\r\n      this.height /= 2;\r\n    }\r\n  }\r\n  doAction(keyCode) {\r\n    switch (keyCode) {\r\n      // keyCode 87 === w\r\n      // keyCode 83 === s\r\n\r\n      case 87:\r\n        console.log(\"W\");\r\n        this.jump();\r\n        break;\r\n      case 83:\r\n        console.log(\"S\");\r\n        this.duck();\r\n        break;\r\n    }\r\n  }\r\n  stopDucking() {\r\n    this.height = 50;\r\n  }\r\n}\r\n\r\nfunction returnDinoPopulation(amount, p) {\r\n  let dinos = [];\r\n  for (let i = 0; i < amount; i++) {\r\n    dinos.push(new Dino(null, p));\r\n  }\r\n  return dinos;\r\n}\r\n\r\nexport { Dino, returnDinoPopulation };\r\n","// import { Bush } from \"./Bush\";\r\n// import { Bird } from \"./Bird\";\r\nimport { Obstacles } from \"./objects/Obstacles\";\r\nimport { Dino } from \"./objects/Dino\";\r\nimport { Enviroment } from \"./objects/Enviroment\";\r\nimport config from \"./configuration.json\";\r\n\r\nlet population = 10;\r\nlet dinos = [];\r\nlet Player;\r\nlet obstacles;\r\nlet b;\r\nlet bird;\r\n\r\nlet enviroment;\r\nlet run = true;\r\n\r\nfunction sketch(p) {\r\n  p.preload = () => {\r\n    Player = new Dino(\"PLAYER\", p);\r\n  };\r\n\r\n  p.setup = () => {\r\n    p.createCanvas(config.GAME_WIDTH, config.GAME_HEIGHT);\r\n    obstacles = new Obstacles(p);\r\n    enviroment = new Enviroment(p);\r\n    obstacles.startGame();\r\n  };\r\n\r\n  p.draw = () => {\r\n    if (run) {\r\n      enviroment.show();\r\n      if (obstacles.update(Player)) {\r\n        run = false;\r\n      }\r\n      Player.update();\r\n    }\r\n  };\r\n\r\n  p.keyPressed = () => {\r\n    if (p.keyCode === 69) {\r\n      run = !run;\r\n    }\r\n    if (Player) {\r\n      Player.doAction(p.keyCode);\r\n    }\r\n  };\r\n  p.keyReleased = () => {\r\n    Player.stopDucking();\r\n  };\r\n}\r\n\r\nexport default sketch;\r\n","class Cloud {\r\n  constructor(p, x, y, width, height) {\r\n    this.p = p;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  show() {\r\n    // this.p.pushStyle();\r\n    this.p.noStroke();\r\n    this.p.fill(100);\r\n    this.p.rect(this.x, this.y, this.width, this.height);\r\n    this.p.stroke(0);\r\n  }\r\n}\r\n\r\nclass Sky {\r\n  constructor(p) {\r\n    this.p = p;\r\n\r\n    this.clouds = [];\r\n    this.clouds.push(new Cloud(this.p, 40, 30, 40, 60));\r\n    this.clouds.push(new Cloud(this.p, 300, 10, 60, 70));\r\n    this.clouds.push(new Cloud(this.p, 470, 20, 35, 54));\r\n    this.clouds.push(new Cloud(this.p, 570, 30, 80, 34));\r\n  }\r\n\r\n  show() {\r\n    console.log(\"CLOUDSS\");\r\n    for (let i = 0; i < this.clouds.length; i++) {\r\n      console.log(\"CLOUD\");\r\n      this.clouds[i].show();\r\n    }\r\n  }\r\n}\r\n\r\nexport { Sky };\r\n","import config from \"../configuration.json\";\r\nimport { Sky } from \"./Sky\";\r\n\r\nclass Enviroment {\r\n  constructor(p) {\r\n    this.p = p;\r\n    this.sky = new Sky(p);\r\n  }\r\n\r\n  show() {\r\n    this.p.background(19, 96, 96);\r\n    this.sky.show();\r\n    this.p.line(\r\n      0,\r\n      -(100 - config.GAME_HEIGHT),\r\n      config.GAME_WIDTH,\r\n      -(100 - config.GAME_HEIGHT)\r\n    );\r\n  }\r\n}\r\n\r\nexport { Enviroment };\r\n","import React from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\nimport sketch from \"./scripts/sketch\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <P5Wrapper sketch={sketch}></P5Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function sketch(p) {\r\n  let canvas;\r\n\r\n  p.setup = () => {\r\n    canvas = p.createCanvas(300, 200);\r\n    p.noStroke();\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.background(\"orangered\");\r\n    p.ellipse(150, 100, 100, 100);\r\n  };\r\n\r\n  p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n    if (canvas)\r\n      //Make sure the canvas has been created\r\n      p.fill(newProps.color);\r\n  };\r\n}\r\n\r\n// useless comment\r\n","import React, { Component } from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\nimport sketch from \"./sketch\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      color: [Math.random() * 255, Math.random() * 255, Math.random() * 255],\r\n    };\r\n    this.randomColor = this.randomColor.bind(this);\r\n  }\r\n\r\n  randomColor() {\r\n    this.setState({\r\n      color: [Math.random() * 255, Math.random() * 255, Math.random() * 255],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.randomColor}>Random Color</button>\r\n        <P5Wrapper sketch={sketch} color={this.state.color}></P5Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Dino from \"../projects/dino/App\";\r\nimport Demo from \"../projects/p5demo/App\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className=\"Main\">\r\n      <Dino />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport \"./css/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"MyBody\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport \"./css/mycss.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}