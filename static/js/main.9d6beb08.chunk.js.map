{"version":3,"sources":["components/Footer.js","components/Header.js","projects/dino/scripts/Dino.js","projects/dino/scripts/Barrier.js","projects/dino/scripts/Bush.js","projects/dino/scripts/Obstacles.js","projects/dino/scripts/sketch.js","projects/dino/scripts/enviroment.js","projects/dino/App.js","projects/p5demo/sketch.js","projects/p5demo/App.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Header","Dino","brain","p","this","position_X","position_Y","config","GAME_HEIGHT","height","gravity","velocity","lift","fill","rect","isOnGround","draw","keyCode","console","log","jump","duck","Barrier","x","bottom_y","width","BASIC_WIDTH","BASIC_HEIGHT","score","GAME_SPEED","Bush","Obstacles","obstacles","maxDistance","minStartDistance","minDistance","speed","bestScore","min","max","Math","ceil","floor","random","i","push","GAME_WIDTH","getRandomPosition","length","update","show","checkColison","behindScene","splice","addScore","addNewObstacle","Player","sketch","setup","createCanvas","startGame","background","line","drawConstantEnviroment","keyPressed","doAction","keyReleased","stopDucking","App","canvas","noStroke","ellipse","myCustomRedrawAccordingToNewPropsHandler","newProps","color","state","randomColor","bind","setState","onClick","Component","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d6beb08.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <div className=\"Footer\">Footer tmp </div>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return <div className=\"Header\">Heddader</div>;\r\n}\r\n\r\nexport default Header;\r\n","import config from \"./configuration.json\";\r\n\r\nclass Dino {\r\n  constructor(brain, p) {\r\n    this.p = p;\r\n    this.position_X = 100;\r\n    this.position_Y = -(100 - config.GAME_HEIGHT);\r\n    this.height = 50;\r\n\r\n    this.gravity = 0.6;\r\n    this.velocity = 0;\r\n    this.lift = -12;\r\n    if (brain === \"PLAYER\") {\r\n    } else if (brain) {\r\n    } else {\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    this.p.fill(0);\r\n    this.p.rect(this.position_X, this.position_Y, 20, -this.height);\r\n  }\r\n\r\n  jump() {\r\n    if (this.isOnGround()) {\r\n      this.velocity = this.lift;\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.velocity += this.gravity;\r\n\r\n    if (this.position_Y + this.velocity > -(100 - config.GAME_HEIGHT)) {\r\n      this.position_Y = -(100 - config.GAME_HEIGHT);\r\n      this.velocity = 0;\r\n    } else {\r\n      this.position_Y += this.velocity;\r\n    }\r\n\r\n    this.draw();\r\n  }\r\n\r\n  isOnGround() {\r\n    if (this.position_Y === -(100 - config.GAME_HEIGHT)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  duck() {\r\n    if (this.isOnGround()) {\r\n      this.height /= 2;\r\n    }\r\n  }\r\n  doAction(keyCode) {\r\n    switch (keyCode) {\r\n      // keyCode 87 === w\r\n      // keyCode 83 === s\r\n\r\n      case 87:\r\n        console.log(\"W\");\r\n        this.jump();\r\n        break;\r\n      case 83:\r\n        console.log(\"S\");\r\n        this.duck();\r\n        break;\r\n    }\r\n  }\r\n  stopDucking() {\r\n    this.height = 50;\r\n  }\r\n}\r\n\r\nfunction returnDinoPopulation(amount, p) {\r\n  let dinos = [];\r\n  for (let i = 0; i < amount; i++) {\r\n    dinos.push(new Dino(null, p));\r\n  }\r\n  return dinos;\r\n}\r\n\r\nexport { Dino, returnDinoPopulation };\r\n","import config from \"./configuration.json\";\r\nclass Barrier {\r\n  constructor(x, bottom_y, width, height, p) {\r\n    this.x = x;\r\n    this.bottom_y = bottom_y;\r\n    this.width = width * config.BASIC_WIDTH;\r\n    this.height = height * config.BASIC_HEIGHT;\r\n    this.p = p;\r\n\r\n    this.score = 0;\r\n  }\r\n\r\n  show() {\r\n    this.p.fill(0);\r\n    this.p.rect(this.x, this.bottom_y, this.width, -this.height);\r\n  }\r\n\r\n  update() {\r\n    this.x -= config.GAME_SPEED;\r\n  }\r\n\r\n  // colision(dinoX, dino_bottom) {\r\n  //   if (dinoX + 20 >= this.x && dinoX <= this.x + this.width) {\r\n  //     if (dino_bottom >= 400 - this.height) {\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n  //   return false;\r\n  // }\r\n\r\n  behindScene() {\r\n    return this.x < -50;\r\n  }\r\n\r\n  addScore() {\r\n    this.score += 1;\r\n  }\r\n  checkColison() {}\r\n}\r\n\r\nexport { Barrier };\r\n","import { Barrier } from \"./Barrier\";\r\n\r\nclass Bush extends Barrier {\r\n  constructor(x, bottom_y, width, height, p) {\r\n    super(x, bottom_y, width, height, p);\r\n  }\r\n}\r\n\r\nexport { Bush };\r\n","import config from \"./configuration.json\";\r\nimport { Bush } from \"./Bush\";\r\nimport { Bird } from \"./Bird\";\r\n\r\nclass Obstacles {\r\n  constructor(p) {\r\n    this.p = p;\r\n    this.obstacles = [];\r\n\r\n    this.maxDistance = 370;\r\n    this.minStartDistance = 270;\r\n    this.minDistance = 200;\r\n    this.speed = config.GAME_SPEED;\r\n\r\n    this.bestScore = 0;\r\n  }\r\n  getRandomPosition(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n  startGame() {\r\n    for (let i = 0; i < 7; i++)\r\n      this.obstacles.push(\r\n        new Bush(\r\n          config.GAME_WIDTH +\r\n            this.getRandomPosition(this.minStartDistance, this.maxDistance) +\r\n            i * 350,\r\n          300,\r\n          3,\r\n          3,\r\n          this.p\r\n        )\r\n      );\r\n    // this.obstacles.push(new Bush(100, 100, 100, 100, this.p));\r\n  }\r\n  addNewObstacle(x) {\r\n    if (x) {\r\n      //   console.log(x);\r\n      //   console.log(\"DODAJE\");\r\n      this.obstacles.push(\r\n        new Bush(\r\n          x + this.getRandomPosition(this.minStartDistance, this.maxDistance),\r\n          300,\r\n          3,\r\n          3,\r\n          this.p\r\n        )\r\n      );\r\n    } else {\r\n      this.obstacles.push(\r\n        new Bush(\r\n          config.GAME_WIDTH +\r\n            this.getRandomPosition(this.minStartDistance, this.maxDistance),\r\n          300,\r\n          3,\r\n          3,\r\n          this.p\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  update() {\r\n    for (let i = this.obstacles.length - 1; i >= 0; i--) {\r\n      this.obstacles[i].update();\r\n      this.obstacles[i].show();\r\n      this.obstacles[i].checkColison();\r\n\r\n      if (this.obstacles[i].behindScene()) {\r\n        this.obstacles.splice(i, 1);\r\n      }\r\n      this.obstacles[i].addScore();\r\n      if (this.obstacles.length < 7) {\r\n        this.addNewObstacle(this.obstacles[this.obstacles.length - 1].x);\r\n      }\r\n    }\r\n  }\r\n}\r\nexport { Obstacles };\r\n","import { returnDinoPopulation, Dino } from \"./Dino\";\r\nimport { Bush } from \"./Bush\";\r\nimport { Bird } from \"./Bird\";\r\nimport { Obstacles } from \"./Obstacles\";\r\nimport { drawConstantEnviroment } from \"./enviroment\";\r\nimport config from \"./configuration.json\";\r\n\r\nlet population = 10;\r\nlet dinos = [];\r\nlet Player;\r\nlet obstacles;\r\nlet b;\r\nlet bird;\r\n\r\nfunction sketch(p) {\r\n  p.setup = () => {\r\n    p.createCanvas(config.GAME_WIDTH, config.GAME_HEIGHT);\r\n    Player = new Dino(\"PLAYER\", p);\r\n    obstacles = new Obstacles(p);\r\n    obstacles.startGame();\r\n  };\r\n\r\n  p.draw = () => {\r\n    drawConstantEnviroment(p);\r\n    Player.update();\r\n    obstacles.update();\r\n  };\r\n  p.keyPressed = () => {\r\n    if (Player) {\r\n      Player.doAction(p.keyCode);\r\n    }\r\n  };\r\n  p.keyReleased = () => {\r\n    Player.stopDucking();\r\n  };\r\n}\r\n\r\nexport default sketch;\r\n","import config from \"./configuration.json\";\r\n\r\nfunction drawConstantEnviroment(p) {\r\n  p.background(19, 96, 96);\r\n  p.line(\r\n    0,\r\n    -(100 - config.GAME_HEIGHT),\r\n    config.GAME_WIDTH,\r\n    -(100 - config.GAME_HEIGHT)\r\n  );\r\n}\r\n\r\nexport { drawConstantEnviroment };\r\n","import React from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\nimport sketch from \"./scripts/sketch\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <P5Wrapper sketch={sketch}></P5Wrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function sketch(p) {\r\n  let canvas;\r\n\r\n  p.setup = () => {\r\n    canvas = p.createCanvas(300, 200);\r\n    p.noStroke();\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.background(\"orangered\");\r\n    p.ellipse(150, 100, 100, 100);\r\n  };\r\n\r\n  p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\r\n    if (canvas)\r\n      //Make sure the canvas has been created\r\n      p.fill(newProps.color);\r\n  };\r\n}\r\n\r\n// useless comment\r\n","import React, { Component } from \"react\";\r\nimport P5Wrapper from \"react-p5-wrapper\";\r\nimport sketch from \"./sketch\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      color: [Math.random() * 255, Math.random() * 255, Math.random() * 255],\r\n    };\r\n    this.randomColor = this.randomColor.bind(this);\r\n  }\r\n\r\n  randomColor() {\r\n    this.setState({\r\n      color: [Math.random() * 255, Math.random() * 255, Math.random() * 255],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.randomColor}>Random Color</button>\r\n        <P5Wrapper sketch={sketch} color={this.state.color}></P5Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Dino from \"../projects/dino/App\";\r\nimport Demo from \"../projects/p5demo/App\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className=\"Main\">\r\n      <Demo />\r\n      <Dino />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport \"./css/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"MyBody\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport \"./css/mycss.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}